<%-include('../partials/admin_header.ejs',{title:"admin page"})%>

<style>
    .content-main {
    margin: 0 auto;
    max-width: 1200px;
    padding: 20px;
}

.content-header {
    margin-bottom: 20px;
}

.content-title {
    font-size: 2rem;
    font-weight: bold;
    color: #333;
}

.card {
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.card-body {
    padding: 20px;
}

.card-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 15px;
}

#bestSellingList {
    list-style: none;
    padding-left: 0;
}

#bestSellingList .list-group-item {
    font-size: 1rem;
    margin-bottom: 8px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

select.form-control {
    width: 200px;
    margin-left: 10px;
}

canvas {
    max-width: 100% !important;
}


</style>
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Dashboard</h2>
            <p>Whole data about your business here</p>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-primary-light"><i class="text-primary material-icons md-monetization_on"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Revenue</h6>
                        <span><%= totalRevenue.toLocaleString() %></span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-success-light"><i class="text-success material-icons md-local_shipping"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Orders</h6>
                        <span><%= totalOrders %></span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Products</h6>
                        <span><%= totalProducts %></span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-info-light"><i class="text-info material-icons md-shopping_basket"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Monthly Earning</h6>
                        <span><%= monthlyEarnings.toLocaleString() %></span>
                    </div>
                </article>
            </div>
        </div>
    </div>

    <!-- chart js  -->
    
    <!-- chart js  -->
    
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Admin Dashboard</h2>
    </div>

    <!-- Filter Section -->
    <div class="mb-4">
        <label for="timeFilter">Filter By:</label>
        <select id="timeFilter" class="form-control" onchange="updateChart()">
            <option value="yearly">Yearly</option>
            <option value="monthly">Monthly</option>
            <option value="weekly">Weekly</option>
        </select>
    </div>

    <!-- Display Filter Duration -->
    <div class="mb-4">
        <p>Time Frame: <strong id="timeFrame"></strong></p>
    </div>

    <!-- Product Sales Chart -->
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Product Sales Chart</h5>
            <canvas id="salesChart" height="120"></canvas>
        </div>
    </div>

    <!-- Best-Selling Products -->
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Top 5 Best-Selling Products</h5>
            <ul id="bestSellingList" class="list-group">
                <!-- Dynamic Content -->
            </ul>
        </div>
    </div>
    <!-- Categories Sales Chart -->
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Category Sales Chart</h5>
            <canvas id="categoriesChart" height="120"></canvas>
        </div>
    </div>

    <!-- Brands Sales Chart -->
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Brand Sales Chart</h5>
            <canvas id="brandsChart" height="120"></canvas>
        </div>
    </div>

</section>

</section>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('salesChart').getContext('2d');
    let salesChart;
    const ctxCategories = document.getElementById('categoriesChart').getContext('2d');
    const ctxBrands = document.getElementById('brandsChart').getContext('2d');
    let categoriesChart;
    let brandsChart;

    async function updateChart() {
        const filter = document.getElementById('timeFilter').value;
        const response = await fetch(`/admin/chart-data?filter=${filter}`);
        const data = await response.json();

        // Update product sales chart
        if (salesChart) salesChart.destroy();
        salesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.products.map(product => product.name), // Product names
                datasets: [{
                    label: 'Sales Quantity',
                    data: data.products.map(product => product.quantitySold), // Sales quantities
                    backgroundColor: "rgba(75, 192, 192, 0.6)",
                    borderColor: "rgba(75, 192, 192, 1)",
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Quantity Sold'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Products'
                        }
                    }
                }
            }
        });

        // Update categories chart
        if (categoriesChart) categoriesChart.destroy();
        categoriesChart = new Chart(ctxCategories, {
            type: 'bar',
            data: {
                labels: data.categories.map(category => category.name), // Category names
                datasets: [{
                    label: 'Category Sales',
                    data: data.categories.map(category => category.quantitySold), // Sales quantities
                    backgroundColor: "rgba(54, 162, 235, 0.6)",
                    borderColor: "rgba(54, 162, 235, 1)",
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Quantity Sold'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Categories'
                        }
                    }
                }
            }
        });

        // Update brands chart
        if (brandsChart) brandsChart.destroy();
        brandsChart = new Chart(ctxBrands, {
            type: 'bar',
            data: {
                labels: data.brands.map(brand => brand.name), // Brand names
                datasets: [{
                    label: 'Brand Sales',
                    data: data.brands.map(brand => brand.quantitySold), // Sales quantities
                    backgroundColor: "rgba(255, 99, 132, 0.6)",
                    borderColor: "rgba(255, 99, 132, 1)",
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Quantity Sold'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Brands'
                        }
                    }
                }
            }
        });

        // Update best-selling products list
        const bestSellingList = document.getElementById('bestSellingList');
        bestSellingList.innerHTML = '';
        data.products.slice(0, 5).forEach(product => {
            const li = document.createElement('li');
            li.className = 'list-group-item';
            li.textContent = `${product.name} - ${product.quantitySold} sold`;
            bestSellingList.appendChild(li);
        });

        // Update time frame description
        const timeFrameEl = document.getElementById('timeFrame');
        if (filter === 'yearly') {
            timeFrameEl.textContent = 'January 2024 - December 2024';
        } else if (filter === 'monthly') {
            timeFrameEl.textContent = 'December 2024';
        } else if (filter === 'weekly') {
            timeFrameEl.textContent = 'Week 1 - Week 4, December 2024';
        }
    }

    // Initial Load
    updateChart();
</script>


<%- include('../partials/admin_footer.ejs')%>

