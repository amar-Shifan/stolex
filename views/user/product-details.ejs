<%-include('../partials/header.ejs',{title:"admin page",style:'/css/productDetails.css' })%>

		<div class="breadcrumbs">
			<div class="container">
				<div class="row">
					<div class="col">
						<p class="bread"><span><a href="/">Home</a></span> / <span>Product Details</span></p>
					</div>
				</div>
			</div>
		</div>

		
		<div class="colorlib-product">
			<div class="container">
				<div class="row row-pb-lg product-detail-wrap">
					<div class="col-sm-6">
						<div class="owl-carousel">
						  <% product.images.forEach(image => { %>
							<div class="item">
							  <div class="product-entry border">
								<a href="#" class="prod-img">
									<div class="zoom-container">
										<img src="<%= image %>" class="img-fluid zoom-image" alt="Product Image" style="z-index: 3;">
									</div>
								</a>
							  </div>
							</div>
						  <% }); %>
						</div>
					</div>
					 
					 
					<div class="col-sm-4">
						<div class="product-desc">
							<h3><%= product.name %></h3>
							<% if (product.discountedPrice) { %>
								<div class="product-price">
									<span class="text-danger fw-bold">₹<%= product.discountedPrice %></span>
									<small class="text-muted text-decoration-line-through">₹<%= product.price %></small>
									<span class="badge bg-success ms-2">
										-<%= Math.round((1 - product.discountedPrice / product.price) * 100) %>% OFF
									</span>
								</div>
							<% } else { %>
								<div class="product-price text-dark">₹<%= product.price %></div>
							<% } %>

							<p><%= product.description %></p>
							<p>Brand : <%= product.brand %></p>

							<div class="product-rating">
								<span class="star filled">★</span>
								<span class="star filled">★</span>
								<span class="star filled">★</span>
								<span class="star filled">★</span>
								<span class="star">★</span>
								<span class="rating-text">(4.0 out of 5 stars)</span>
							</div>
							<div class="size-wrap">
								<div class="block-26 mb-2">
									<h4>Size</h4>
									<ul id="size-list">
										<% product.stock.forEach((stock) => { %>
											<li>
												<button 
													class="size-option btn btn-outline-dark" 
													data-size="<%= stock.size %>" 
													data-quantity="<%= stock.quantity %>">
													<%= stock.size %>
												</button>
											</li>
										<% }) %>
									</ul>
								</div>
							</div>
							

							
							<div class="stock-info">
								<h5>Total Stock: <span id="total-stock"><%= product.stock.reduce((total, stock) => total + stock.quantity, 0) %></span></h5>
								<h5>Available Stock for Selected Size: <span id="selected-stock">Select a size</span></h5>
							</div>
							
							<div class="input-group mb-4">
								<span class="input-group-btn">
									<button type="button" class="quantity-left-minus btn" data-type="minus">
										<i class="icon-minus2"></i>
									</button>
								</span>
								<input type="text" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="<%= product.stock.reduce((total, stock) => total + stock.quantity, 0) %>">

								<span class="input-group-btn ml-1">
									<button type="button" class="quantity-right-plus btn" data-type="plus">
										<i class="icon-plus2"></i>
									</button>
								</span>
							</div>
							  
							<div class="row">
								<div class="col-sm-12 text-center">
								  <div class="d-flex justify-content-center align-items-center">
									<!-- Add to Cart Button -->

									<form id="addToCart"> 
										<input type="hidden" id="selected-size" name="size" value="">
										<input type="hidden" id="product-id" name="productId" value="<%= product._id %>">
										<input type="hidden" id="selected-quantity" name="quantity" value="1">
										<button type="submit" class="btn btn-dark btn-addtocart mr-3" >
										<i class="icon-shopping-cart"></i> Add to Cart
										</button>
									</form>
							  
									<!-- Add to Wishlist Button -->
									<div class="wishlist-container">
										<form id="wishlistForm">
											<input type="text" hidden value="<%= product._id %>" name="productId">
											<button type="submit">
												<i class="icon-heart wishlist-heart"></i>
											</button>
										</form>										
									</div>
								  </div>
								</div>
							</div>
							  
						</div>
					</div>
				</div>
		
				<div class="row">
					<div class="col-sm-12">
						<div class="row">
							<div class="col-md-12 pills">
								<div class="bd-example bd-example-tabs">
									<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
										<li class="nav-item">
											<a class="nav-link active" id="pills-description-tab" data-toggle="pill" href="#pills-description" role="tab" aria-controls="pills-description" aria-expanded="true">Description</a>
										</li>
										<li class="nav-item">
											<a class="nav-link" id="pills-manufacturer-tab" data-toggle="pill" href="#pills-manufacturer" role="tab" aria-controls="pills-manufacturer" aria-expanded="true">Brand</a>
										</li>
										<li class="nav-item">
											<a class="nav-link" id="pills-review-tab" data-toggle="pill" href="#pills-review" role="tab" aria-controls="pills-review" aria-expanded="true">Review</a>
										</li>
									</ul>
		
									<div class="tab-content" id="pills-tabContent">
										<div class="tab-pane border fade show active" id="pills-description" role="tabpanel" aria-labelledby="pills-description-tab">
											<p><%= product.description %></p>
										</div>
		
										<div class="tab-pane border fade" id="pills-manufacturer" role="tabpanel" aria-labelledby="pills-manufacturer-tab">
											<p>Brand: <%= product.brand || 'N/A' %></p>
										</div>
										<div class="tab-pane border fade" id="pills-review" role="tabpanel" aria-labelledby="pills-review-tab">
											<div class="row">
												 <div class="col-md-8">
													 <h3 class="head">23 Reviews</h3>
													 <div class="review">
														 <div class="user-img" style="background-image: url(images/person1.jpg)"></div>
														 <div class="desc">
															 <h4>
																 <span class="text-left">Jacob Webb</span>
																 <span class="text-right">14 March 2018</span>
															 </h4>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-half"></i>
																	 <i class="icon-star-empty"></i>
																 </span>
																 <span class="text-right"><a href="#" class="reply"><i class="icon-reply"></i></a></span>
															 </p>
															 <p>When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrov</p>
														 </div>
													 </div>
													 <div class="review">
														 <div class="user-img" style="background-image: url(images/person2.jpg)"></div>
														 <div class="desc">
															 <h4>
																 <span class="text-left">Jacob Webb</span>
																 <span class="text-right">14 March 2018</span>
															 </h4>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-half"></i>
																	 <i class="icon-star-empty"></i>
																 </span>
																 <span class="text-right"><a href="#" class="reply"><i class="icon-reply"></i></a></span>
															 </p>
															 <p>When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrov</p>
														 </div>
													 </div>
													 <div class="review">
														 <div class="user-img" style="background-image: url(images/person3.jpg)"></div>
														 <div class="desc">
															 <h4>
																 <span class="text-left">Jacob Webb</span>
																 <span class="text-right">14 March 2018</span>
															 </h4>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-half"></i>
																	 <i class="icon-star-empty"></i>
																 </span>
																 <span class="text-right"><a href="#" class="reply"><i class="icon-reply"></i></a></span>
															 </p>
															 <p>When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrov</p>
														 </div>
													 </div>
												 </div>
												 <div class="col-md-4">
													 <div class="rating-wrap">
														 <h3 class="head">Give a Review</h3>
														 <div class="wrap">
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 (98%)
																 </span>
																 <span>20 Reviews</span>
															 </p>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-empty"></i>
																	 (85%)
																 </span>
																 <span>10 Reviews</span>
															 </p>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-empty"></i>
																	 <i class="icon-star-empty"></i>
																	 (70%)
																 </span>
																 <span>5 Reviews</span>
															 </p>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-empty"></i>
																	 <i class="icon-star-empty"></i>
																	 <i class="icon-star-empty"></i>
																	 (10%)
																 </span>
																 <span>0 Reviews</span>
															 </p>
															 <p class="star">
																 <span>
																	 <i class="icon-star-full"></i>
																	 <i class="icon-star-empty"></i>
																	 <i class="icon-star-empty"></i>
																	 <i class="icon-star-empty"></i>
																	 <i class="icon-star-empty"></i>
																	 (0%)
																 </span>
																 <span>0 Reviews</span>
															 </p>
														 </div>
													 </div>
												 </div>
											 </div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="related-products mt-5">
				<h2 class="text-center mb-4">Related Products</h2>
				<div class="row">
				  <% if (relatedProducts && relatedProducts.length > 0) { %>
					<% relatedProducts.forEach(relatedProduct => { %>
					  <div class="col-md-3 mb-4">
						<div class="card border-0 shadow-sm">
						  <!-- Product Image -->
						  <img
							src="<%= relatedProduct.images && relatedProduct.images.length > 0 ? relatedProduct.images[0] : '/default-image.jpg' %>"
							class="card-img-top"
							alt="<%= relatedProduct.name %>"
							style="height: 200px; object-fit: cover;"
						  />
						  <div class="card-body text-center">
							<h5 class="card-title text-truncate" title="<%= relatedProduct.name %>">
							  <%= relatedProduct.name %>
							</h5>
							<p class="card-text">$<%= relatedProduct.price.toFixed(2) %></p>
							<a href="/productDetails/<%= relatedProduct._id %>" class="btn btn-outline-dark btn-sm">
							  View Details
							</a>
						  </div>
						</div>
					  </div>
					<% }); %>
				  <% } else { %>
					<p class="text-center">No related products available.</p>
				  <% } %>
				</div>
			  </div>
			  
		</div>
		
		  
		
<script src="/js/confirmation.js"></script>
<script src="/js/showNotification.js"></script>

<script>
		
		// sizes and stocks 
document.addEventListener('DOMContentLoaded', () => {
    const sizeOptions = document.querySelectorAll('.size-option');
    const totalStockElement = document.getElementById('total-stock');
    const selectedStockElement = document.getElementById('selected-stock');
    const quantityInput = document.getElementById('quantity');
    const minusButton = document.querySelector('.quantity-left-minus');
    const plusButton = document.querySelector('.quantity-right-plus');

	const sizeInput = document.getElementById('selected-size');
    const quantityInputHidden = document.getElementById('selected-quantity');
    const visibleQuantityInput = document.getElementById('quantity');

    // Default stock to show total stock
    let totalStock = parseInt(totalStockElement.textContent, 10);
    let selectedStock = null; // To track the selected stock
    let selectedSize = null;  // To track the selected size

    // Add event listeners to size options
    sizeOptions.forEach(option => {
        option.addEventListener('click', (event) => {
            event.preventDefault(); // Prevent default link behavior

			sizeInput.value = option.dataset.size;
            // Highlight the selected size
            sizeOptions.forEach(opt => opt.classList.remove('selected'));
            option.classList.add('selected');

            // Update stock display for the selected size
            selectedStock = parseInt(option.dataset.quantity, 10); // Get stock from data attribute
            selectedSize = option.dataset.size; // Track the selected size
            selectedStockElement.textContent = selectedStock;
            quantityInput.value = 1; // Reset quantity to 1
            quantityInput.max = selectedStock; // Update max value for the input field
        });
    });

    // Increment and decrement quantity
    if (minusButton && plusButton && quantityInput) {

		
        // Decrement the quantity when the minus button is clicked
        minusButton.addEventListener('click', function (event) {
            event.preventDefault(); // Prevent any default behavior
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
				quantityInputHidden.value = visibleQuantityInput.value;
            }
        });

        // Increment the quantity when the plus button is clicked
        plusButton.addEventListener('click', function (event) {
            event.preventDefault(); // Prevent any default behavior
            let currentValue = parseInt(quantityInput.value);
            let maxValue = parseInt(quantityInput.getAttribute('max'));

            if (selectedStock === null) {
                // alert("Please select a size first!");
				confirmationUtil.confirm({
					message: 'Please select a size first!',
					confirmText: 'Ok',
					cancelText: 'Cancel',
				})
                return;
            }

            if (currentValue < maxValue) {
                quantityInput.value = currentValue + 1;
				quantityInputHidden.value = visibleQuantityInput.value;
            }
        });


		// add to wishlist 
		const wishlistContainer = document.querySelector('.wishlist-container');

		wishlistContainer.addEventListener('click', () => {
			// Toggle the "active" class to change the color
			wishlistContainer.classList.toggle('active');
		});


    }

    // Reset selection when clicking outside the size options (optional)
    document.body.addEventListener('click', (event) => {
        if (!event.target.closest('.size-wrap') && !event.target.closest('.input-group')) {
            sizeOptions.forEach(opt => opt.classList.remove('selected'));
            selectedStock = null; // Reset selected stock
            selectedSize = null; // Reset selected size
            selectedStockElement.textContent = 'Select a size';
            quantityInput.value = 1;
            quantityInput.max = totalStock; // Reset max to total stock
        }
    });

	// add to cart 
    // Update hidden quantity input whenever the visible quantity changes
    visibleQuantityInput.addEventListener('input', () => {
        quantityInputHidden.value = visibleQuantityInput.value;
    });


	document.getElementById('addToCart').addEventListener('submit', async (e) => {
    e.preventDefault(); 

	console.log(location.pathname)
    const authenticated = await isAuth(null, 'Oops! Login first', location.pathname );

    if (authenticated) {
        const form = e.target; 
        const formData = new FormData(form);

        try {

            const objectForm = Object.fromEntries(formData.entries());
            console.log('Form Data:', objectForm); 


            const response = await fetch('/cart/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(objectForm),
            });


            const data = await response.json().catch(() => ({
                success: false,
                message: 'Invalid server response',
            }));


            if (data.success) {
                showNotification('success', data.message);
            } else {
                showNotification('error', data.message);
            }
			
        } catch (error) {
            console.error('Error adding to cart:', error); 
            showNotification('error', 'Something went wrong');
        }
    }
	});
});
const form = document.getElementById('wishlistForm');

form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const formObject = Object.fromEntries(formData.entries());

    try {
        const res = await fetch('/wishlist/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', // Ensure Content-Type is correct
            },
            body: JSON.stringify(formObject), // Convert the object to a JSON string
        });

        const data = await res.json();
        if (data.success) {
            showNotification('success', data.message);
        } else {
            showNotification('error', data.message);
        }
    } catch (error) {
        showNotification('error', 'Something went wrong!');
        console.log('Error:', error);
    }
});





// zooming image 
const zoomImages = document.querySelectorAll('.zoom-image');

zoomImages.forEach((image) => {
    image.addEventListener('mousemove', (e) => {
        const imageRect = image.getBoundingClientRect();
        const x = e.clientX - imageRect.left;
        const y = e.clientY - imageRect.top;
        
        const xPercent = (x / imageRect.width) * 100;
        const yPercent = (y / imageRect.height) * 100;
        
        image.style.transformOrigin = `${xPercent}% ${yPercent}%`;
        image.style.transform = 'scale(1.5)';
    });
    
    image.addEventListener('mouseleave', () => {
        image.style.transform = 'scale(1)';
    });
});




</script>
<%-include('../partials/footer.ejs') %>


