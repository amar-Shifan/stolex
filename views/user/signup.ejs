<%- include('../partials/header.ejs') %>


    <div class="container">
        <div class="form-container">
            <!-- Previous header content -->
            <div class="form-header">
                <h3>Create Account</h3>
                <p>Sign up to get started with our service</p>
            </div>
            <div id="result" style="text-align: center;"></div>
            <form id="form">
                <!-- Previous form fields remain the same until password section -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" class="form-control" name="username" id="username" required>
                    </div>
                    <div class="col-md-6">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" name="email" id="email" required>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="phone" class="form-label">Phone Number</label>
                        <input type="tel" class="form-control" id="number" name="number" required>
                    </div>
                    <div class="col-md-6">
                        <label for="dob" class="form-label">Date of Birth</label>
                        <input type="date" class="form-control" id="dob" name="dob" required>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" autocomplete="new-password" name="password" required>
                        <!-- New password criteria section -->
                        <div class="password-criteria" id="password-criteria">
                            <ul class="criteria-list">
                                <li class="criteria-item" id="length-criteria">
                                    <span class="criteria-icon invalid">✕</span>
                                    At least 8 characters
                                </li>
                                <li class="criteria-item" id="uppercase-criteria">
                                    <span class="criteria-icon invalid">✕</span>
                                    One uppercase letter
                                </li>
                                <li class="criteria-item" id="lowercase-criteria">
                                    <span class="criteria-icon invalid">✕</span>
                                    One lowercase letter
                                </li>
                                <li class="criteria-item" id="number-criteria">
                                    <span class="criteria-icon invalid">✕</span>
                                    One number
                                </li>
                                <li class="criteria-item" id="special-criteria">
                                    <span class="criteria-icon invalid">✕</span>
                                    One special character
                                </li>
                            </ul>
                            <div class="password-strength">
                                <div class="strength-meter" id="strength-meter"></div>
                            </div>
                            <div class="strength-text" id="strength-text">Password Strength: Weak</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="confirm-password" class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="confirm" name="confirm-password" required>
                    </div>
                </div>

                <!-- Rest of the form remains the same -->
                <div class="mb-4">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="terms" required>
                        <label class="form-check-label" for="terms">
                            I accept the Terms & Conditions
                        </label>
                    </div>
                </div>

                <div class="d-grid gap-3">
                    <button type="submit" class="btn btn-signup">SIGN UP</button>
                    <div class="divider">
                        <span>OR</span>
                    </div>
                    <button type="button" class="google-btn">
                        <a href="/auth/google">
                            <img src="https://cdn.cdnlogo.com/logos/g/35/google-icon.svg" alt="Google" style="width: 20px; margin-right: 10px;">
                            Sign up with Google
                        </a>
                    </button>
                </div>
            </form>
            <div class="login-text">
                Already have an account? <a href="/user-login" class="login-link">Log in</a>
            </div>
        </div>
    </div>

    <%- include('../partials/footer.ejs') %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    // Updated JavaScript for new password criteria
    document.getElementById('password').addEventListener('focus', function() {
        document.getElementById('password-criteria').style.display = 'block';
    });

    document.getElementById('password').addEventListener('input', function(e) {
        const password = e.target.value;
        let strength = 0;
        const criteria = {
            length: password.length >= 8,
            uppercase: /[A-Z]/.test(password),
            lowercase: /[a-z]/.test(password),
            number: /[0-9]/.test(password),
            special: /[!@#$%^&*]/.test(password)
        };

        // Update criteria icons
        updateCriteriaIcon('length-criteria', criteria.length);
        updateCriteriaIcon('uppercase-criteria', criteria.uppercase);
        updateCriteriaIcon('lowercase-criteria', criteria.lowercase);
        updateCriteriaIcon('number-criteria', criteria.number);
        updateCriteriaIcon('special-criteria', criteria.special);

        // Calculate password strength
        strength += criteria.length ? 20 : 0;
        strength += criteria.uppercase ? 20 : 0;
        strength += criteria.lowercase ? 20 : 0;
        strength += criteria.number ? 20 : 0;
        strength += criteria.special ? 20 : 0;

        // Update strength meter
        const strengthMeter = document.getElementById('strength-meter');
        const strengthText = document.getElementById('strength-text');
        
        strengthMeter.style.width = strength + '%';
        
        if (strength <= 40) {
            strengthMeter.style.backgroundColor = '#dc3545';
            strengthText.textContent = 'Password Strength: Weak';
        } else if (strength <= 80) {
            strengthMeter.style.backgroundColor = '#ffc107';
            strengthText.textContent = 'Password Strength: Medium';
        } else {
            strengthMeter.style.backgroundColor = '#68c3a3';
            strengthText.textContent = 'Password Strength: Strong';
        }
    });

    function updateCriteriaIcon(criteriaId, isValid) {
        const criteriaElement = document.getElementById(criteriaId);
        const iconElement = criteriaElement.querySelector('.criteria-icon');
        
        if (isValid) {
            iconElement.className = 'criteria-icon valid';
            iconElement.textContent = '✓';
        } else {
            iconElement.className = 'criteria-icon invalid';
            iconElement.textContent = '✕';
        }
    }

   
    const result = document.getElementById('result');
    
    document.getElementById('form').addEventListener('submit', (e) => {
 
        e.preventDefault();
        const form = e.target;
        
        result.style.display = 'block';
        result.innerHTML = '';
        
        if (!form.checkValidity()) {
            result.innerHTML = 'Please fill out all the required fields.';
            result.style.color = 'red';
            return;
        }
        
        const username = document.getElementById('username').value.trim();
        const password = document.getElementById('password').value.trim();
        const email = document.getElementById('email').value.trim();
        const number = document.getElementById('number').value.trim();
        const confirmPassword = document.getElementById('confirm').value.trim();
        const dob = document.getElementById('dob').value.trim();
        
        // Your existing validation code
        if (!/^[A-Za-z ]+$/.test(username)) {
            result.innerHTML = 'Name should contain only letters and spaces.';
            result.style.color = 'red';
            return;
        }
        
        if (!/^([a-zA-Z0-9_]+)@([a-zA-Z0-9]+)\.([a-zA-Z]+)(\.[a-zA-Z]+)?$/.test(email)) {
            result.innerHTML = 'Please enter a valid email address.';
            result.style.color = 'red';
            return;
        }
        
        if (number.length !== 10 || !/^\d+$/.test(number)) {
            result.innerHTML = 'Number should be 10 digits long and contain only numbers.';
            result.style.color = 'red';
            return;
        }
        
        if (password !== confirmPassword) {
            result.innerHTML = 'Passwords do not match. Please re-enter your password.';
            result.style.color = 'red';
            return;
        }
        
        // Your existing fetch code
        fetch('/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username,
                email: email,
                password: password,
                dob: dob,
                phoneNumber: number,
            })
        })
        .then((response) => {
            console.log("Server response:", response);
            return response.json();
        })
        .then((data) => {
            console.log("Parsed data:", data);
            console.log(data);
            result.style.color = data.status ? "green" : "red";
            result.innerHTML = data.message;

            console.log(data.status);
            
            if (data.status) {
                console.log('data succes ')
                setTimeout(() => {
                    location.href = "/verify";
                }, 2000);
            }
            console.log('data done');
            
        })
        .catch((error) => {
            console.log("Error in fetch:", error);
            result.style.color = "red";
            result.innerHTML = "An error occurred. Please try again later.";
        })


        .finally(() => {
            form.reset();
            setTimeout(() => {
                result.style.display = 'none';
            }, 3000);
        });
    });

    document.getElementById('form').addEventListener('click', () => {
        const result = document.getElementById('result');
        result.innerHTML = '';
    });
    </script>
</body>
</html>
