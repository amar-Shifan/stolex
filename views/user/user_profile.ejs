<%-include('../partials/header.ejs',{title:"userProfile",style:'/css/userProfile.css' })%>

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <%- include('../partials/user_sidebar.ejs') %>

        <!-- Main Content -->
        <div class="col-md-9 col-lg-10 p-4">
            <!-- Profile Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <!-- Profile Image Section -->
                    <div class="row align-items-center">
                        <div class="col-md-4 text-center">
                            <div class="position-relative d-inline-block mb-3 profile-image-container">
                                <!-- Profile Image -->
                                <img src="<%= user.profile ? user.profile : '/images/banner.jpg' %>" 
                                    class="rounded-circle profile-image" 
                                    alt="User Profile Image">
            
                                <!-- Form for Upload -->
                                <form id="userProfile" enctype="multipart/form-data">
                                    <!-- File Input -->
                                    <input type="file" name="profile" accept="image/*" class="d-none">
            
                                    <!-- Hover Overlay -->
                                    <div class="hover-overlay">
                                        <i class="bi bi-camera-fill"></i>
                                    </div>
            
                                    <!-- Update Button -->
                                    <button type="submit" class="btn btn-primary mt-2">Update Profile</button>
                                </form>
                            </div>
                        </div>
            
                        <!-- User Info Section -->
                        <div class="col-md-8">
                            <!-- User Details Form -->
                            <form id="userDetailsForm">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Username</label>
                                        <input type="text" name="username" class="form-control" value="<%= user.username %>" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Date of Birth</label>
                                        <input type="date" name="dob" class="form-control" value="<%= user.dob %>" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Phone Number</label>
                                        <input type="text" name="phoneNumber" class="form-control" value="<%= user.phoneNumber %>" pattern="^\d{10}$" required>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary">Update Details</button>
                            </form>
            
                            <!-- Password Reset Section -->
                            <form id="passwordResetForm" class="mt-4">
                                <h5 class="mb-3">Change Password</h5>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Current Password</label>
                                        <input type="password" name="currentPassword" class="form-control" placeholder="Enter current password" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">New Password</label>
                                        <input type="password" name="newPassword" class="form-control" placeholder="Enter new password" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Confirm New Password</label>
                                        <input type="password" name="confirmPassword" class="form-control" placeholder="Confirm new password" required>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-warning">Change Password</button>
                            </form>
            
                            <!-- Reset Password Button -->
                            <div class="mt-3">
                                <!-- Changed the 'href' to trigger the modal -->
                                <a href="#" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#forgotPasswordModal">Forgot Password?</a>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- resset password modal -->
            <div class="modal fade" id="forgotPasswordModal" tabindex="-1" aria-labelledby="forgotPasswordModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="forgotPasswordModalLabel">Forgot Password</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="forgotPasswordForm">
                                <div class="mb-3">
                                    <label for="email" class="form-label">Enter the email that you have logged in with</label>
                                    <input type="email" name="email" id="email" class="form-control" placeholder="Your email address" required>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Submit</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>            
            
            
            <!-- Address Management -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-4">Manage Addresses</h5>
                    <div class="mb-3">
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                            <i class="bi bi-plus-circle"></i> Add New Address
                        </button>
                    </div>
                    <div id="addressList">
                        <% if (addresses && addresses.length > 0) { %>
                            <% addresses.forEach(address => { %>
                                <div class="card mb-3">
                                    <div class="card-body d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong><%= address.fullName %></strong><br>
                                            <%= address.address %>, <%= address.city %>, <%= address.state %> <%= address.pincode %><br>
                                            Phone: <%= address.phoneNumber %>
                                        </div>
                                        <div>
                                            <button 
                                                class="btn btn-primary btn-sm me-2" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editAddressModal" 
                                                id="edit"
                                                data-id="<%= address._id %>" 
                                                data-fullname="<%= address.fullName %>" 
                                                data-address="<%= address.address %>" 
                                                data-city="<%= address.city %>" 
                                                data-state="<%= address.state %>" 
                                                data-pincode="<%= address.pincode %>" 
                                                data-phonenumber="<%= address.phoneNumber %>"
                                            >
                                                <i class="bi bi-pencil"></i> Edit
                                            </button>
                                            <button 
                                                class="btn btn-danger btn-sm delete-address" 
                                                id="delete-address"
                                                data-id="<%= address._id %>"
                                            >
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No addresses found. Add a new one!</p>
                        <% } %>
                    </div>
                </div>
            </div>
            
        </div>
    </div>
</div>

<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="address-form">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="NAME" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="NAME" name="fullName" placeholder="Enter full name">
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <textarea class="form-control" id="address" rows="3" name="address" placeholder="Enter your address"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="pincode" class="form-label">PIN Code</label>
                        <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter PIN code">
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="state" class="form-label">State</label>
                            <input type="text" class="form-control" id="state" name="state" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="city" readonly>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone</label>
                        <input type="tel" class="form-control" id="phoneNumber"  name="phoneNumber" placeholder="Enter phone number">
                    </div>
                    
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Address</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editAddresssForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="name" name="fullName" placeholder="Enter full name">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Address</label>
                            <textarea class="form-control" rows="3" id="address" name="address" placeholder="Enter your address"></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="state" class="form-label">State</label>
                                <select class="form-control" id="state" name="state">
                                    <option value="" disabled selected>Select a state</option>
                                    <!-- States will be dynamically populated here -->
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="city" class="form-label">City</label>
                                <select class="form-control" id="city" name="city" disabled>
                                    <option value="" disabled selected>Select a city</option>
                                    <!-- Cities will be dynamically populated here -->
                                </select>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="pincode" class="form-label">PIN Code</label>
                            <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter PIN code">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Phone</label>
                            <input type="tel" class="form-control" id="phoneNumber"  name="phoneNumber" placeholder="Enter phone number">
                        </div>
                        <input type="text" class="form-control" hidden id="addressId" name="addressId" >
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Update Address</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
document.getElementById("pincode").addEventListener("input", async function () {
    const pincode = this.value.trim();
    const stateField = document.getElementById("state");
    const cityField = document.getElementById("city");
    const resultDiv = document.getElementById("validationResult");

    if (pincode.length === 6) {

        stateField.value = "";
        cityField.value = "";

        try {
            const response = await fetch(`https://api.postalpincode.in/pincode/${pincode}`);
            const data = await response.json();

            if (data[0].Status === "Success") {
                const postOffices = data[0].PostOffice;

                // Populate State and City fields
                stateField.value = postOffices[0].State || "";
                cityField.value = postOffices[0].District || "";

                // Populate Place dropdown
                postOffices.forEach((office) => {
                    const option = document.createElement("option");
                    option.value = office.Name;
                    option.textContent = office.Name;
                });

                resultDiv.innerHTML = `<p class="text-success">Details fetched successfully!</p>`;
            } else {
                resultDiv.innerHTML = `<p class="text-danger">Invalid Pincode or No Data Found.</p>`;
            }
        } catch (error) {
            console.error("Error fetching pincode data:", error);
            resultDiv.innerHTML = `<p class="text-danger">Error: ${error.message}</p>`;
        }
    }
});


document.getElementById('userProfile').addEventListener('submit', async (e) => {
    e.preventDefault(); 

    const form = e.target;
    const formData = new FormData(form); 

    try {
        const response = await fetch('/addProfile', {
            method: 'POST',
            body: formData, 
        });

        const data = await response.json();

        if (data.success) {
            showNotification('success', data.message);
        } else {
            showNotification('error', data.message);
        }
    } catch (error) {
        console.log('Something went wrong', error);
        showNotification('error', 'Something went wrong!');
    }
});

document.querySelector('.hover-overlay').addEventListener('click', () => {
    document.querySelector('input[type="file"]').click();
});

document.querySelector('input[type="file"]').addEventListener('change',(e)=>{
    const file = e.target.files[0];
    if(file){
        const reader = new FileReader();
        reader.onload = (e) => {
            const profileImage = document.querySelector('.profile-image');
            profileImage.src = e.target.result;
            profileImage.classList.add('updated');
            setTimeout(() => profileImage.classList.remove('updated'), 500);
        };
        reader.readAsDataURL(file);
    }
})


// udpating the user details 

document.getElementById("userDetailsForm").addEventListener('submit', async (e) => {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form); 

    
    try {
        const formObject = Object.fromEntries(formData.entries());

        const response = await fetch("/updateDetails", { 
            method: 'PATCH', 
            headers: { 
                'Content-Type': 'application/json' 
            },
            body: JSON.stringify(formObject)
        });

        const data = await response.json();

        if (data.success) {
            showNotification('success', data.message);
        } else {
            showNotification('error', data.message);
        }

    } catch (error) {
        console.log(error, "error in updating the details");
        showNotification('error', 'Something went wrong!');
    }
});


// adding the user Address

document.getElementById('address-form').addEventListener('submit' , async(e)=>{
    e.preventDefault();

    const form = e.target 
    const formData = new FormData(form);

    try {
        
        const formObject = Object.fromEntries(formData.entries());

        const response = await fetch('/addAddress' , {
            method : 'post',
            headers : {'Content-Type' : 'application/json'},
            body : JSON.stringify(formObject)
        })

        const data = await response.json();

        if(data.success){
            showNotification('success' , data.message)
            setTimeout(()=>{
                location.href = '/user_profile'
            },2000)
        }else{
            showNotification('error',data.message)
        }


    } catch (error) {
        console.log(error, 'error in adding the user Address')
        showNotification('error',"Something went wrong!")
    }
})


document.getElementById('passwordResetForm').addEventListener('submit' , async(e)=>{
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    try {
        const formObject = Object.fromEntries(formData.entries());

        const response = await fetch('/changePassword' , {
            method : 'PATCH',
            headers:{'Content-Type':'application/json'},
            body:JSON.stringify(formObject)
        })
        const data = await response.json();

        if(data.success){
            showNotification('success',data.message)
        }else{
            showNotification('error', data.message)
        }

    } catch (error) {
        console.log(error);
        showNotification('error' , 'Something went Wrong!')
    }
} )

document.getElementById('forgotPasswordForm').addEventListener('submit' , async(e)=>{
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    try {

        const formObject = Object.fromEntries(formData.entries());
        const response = await fetch('/verifyEmail' , {
            method:'post' ,
            headers:{'Content-Type':'application/json'},
            body:JSON.stringify(formObject)
        })
        
        const data = await response.json();

        if(data.success) showNotification('success' , data.message)
        else showNotification('error' , data.message)


    } catch (error) {
        console.log(error);
        showNotification('error','Something went wrong!')
    }
})

// autofill the editAddressModal
document.getElementById('editAddressModal').addEventListener('show.bs.modal', (e) => {
    const button = e.relatedTarget; // The button that triggered the modal
    const modal = e.target;

    // Extract data from the button's attributes
    const fullName = button.getAttribute('data-fullname');
    const address = button.getAttribute('data-address');
    const city = button.getAttribute('data-city');
    const state = button.getAttribute('data-state');
    const pincode = button.getAttribute('data-pincode');
    const phoneNumber = button.getAttribute('data-phonenumber');
    const addressId = button.getAttribute('data-id');

    // Prefill modal fields
    modal.querySelector('#name').value = fullName;
    modal.querySelector('#address').value = address;
    modal.querySelector('#city').value = city;
    modal.querySelector('#state').value = state;
    modal.querySelector('#pincode').value = pincode;
    modal.querySelector('#phoneNumber').value = phoneNumber;
    modal.querySelector('#addressId').value = addressId;
});


document.getElementById('editAddresssForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);

    try {
        const formObject = Object.fromEntries(formData.entries());

        if (!formObject.fullName || !formObject.address || !formObject.city || !formObject.state || !formObject.pincode || !formObject.phoneNumber) {
            showNotification('error', 'All fields are required!');
            return;
        }

        const res = await fetch('/address/edit', {
            method: 'PATCH', 
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(formObject),
        });

        const data = await res.json();

        if (res.ok && data.success) {
            showNotification('success', data.message);

            setTimeout(() => {
                window.location.reload();
            }, 1500);
        } else {
            showNotification('error', data.message || 'Failed to update address.');
        }
    } catch (error) {
        console.error('Error:', error);
        showNotification('error', 'Something went wrong!');
    }
});


document.addEventListener('click',async(e)=>{

    if(e.target.id === 'delete-address'){

        const id = e.target.getAttribute('data-id');

        if (!id) {
            showNotification('error', 'Address ID not found!');
            return;
        }
        try {
            const res = await fetch(`/address/delete/${id}`, {
                method: 'DELETE',
            });
            const data = await res.json();
            if (data.success) {
                showNotification('success', data.message);
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            } else {
                showNotification('error', data.message);
            }
        } catch (error) {
            console.error(error);
            showNotification('error', 'Something went wrong!');
        }
    }
    
})

</script>

<%- include('../partials/footer.ejs') %>
